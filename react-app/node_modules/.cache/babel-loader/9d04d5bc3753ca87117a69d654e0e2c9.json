{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/e-com50/react-app/src/components/calender.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dayOWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst months = ['January', 'Feburary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nfunction Calender(props) {\n  _s();\n\n  const {\n    day,\n    dayNo,\n    month,\n    year\n  } = props.date();\n  const [sMonth, setSMonth] = useState(month + 1);\n  const [sYear, setSYear] = useState(year); //to get empty spaces before day 1 of month\n\n  const getDay1ofMonth = () => new Date(`${sMonth}/1/${sYear}`).getDay();\n\n  function getDaysInMonth(year, month) {\n    return new Date(year, month, 0).getDate();\n  }\n\n  function createDateListForMonth(year, month) {\n    const dateList = []; //to add empty spaces before day 1 of month to the list\n\n    for (var i = 0; i < getDay1ofMonth(); i++) {\n      dateList.push(\"\");\n    }\n\n    const noOfDays = getDaysInMonth(year, month);\n\n    for (var i = 1; i <= noOfDays; i++) {\n      dateList.push(i);\n    }\n\n    return dateList;\n  }\n\n  const changeCalender = action => {\n    if (action === 'add' && sMonth <= 11) {\n      setSMonth(sMonth + 1);\n      return;\n    } else if (action === 'add' && sMonth === 12) {\n      setSMonth(1);\n      setSYear(sYear + 1);\n      return;\n    }\n\n    if (action === 'sub' && sMonth >= 2) {\n      setSMonth(sMonth - 1);\n      return;\n    } else if (action === 'sub' && sMonth === 1) {\n      setSMonth(12);\n      setSYear(sYear - 1);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calender\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calender-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [dayOWeek[day].slice(0, 3), \", \", months[month], \" \", dayNo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calender-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"prev\",\n          onClick: () => changeCalender('sub'),\n          children: \"\\u276E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"next\",\n          onClick: () => changeCalender('add'),\n          children: \"\\u276F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mid\",\n          children: [months[sMonth - 1], \" \", sYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"days\",\n        children: dayOWeek.map(day => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: day.slice(0, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dayNo\",\n        children: createDateListForMonth(sYear, sMonth).map(date => /*#__PURE__*/_jsxDEV(\"li\", {\n          value: date,\n          onClick: e => alert(`${sMonth}/${e.target.value}/${sYear}`),\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Calender, \"Qhk5lSRaRzuSdJ7xeupbHP26X1I=\");\n\n_c = Calender;\nexport default Calender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/e-com50/react-app/src/components/calender.jsx"],"names":["useState","dayOWeek","months","Calender","props","day","dayNo","month","year","date","sMonth","setSMonth","sYear","setSYear","getDay1ofMonth","Date","getDay","getDaysInMonth","getDate","createDateListForMonth","dateList","i","push","noOfDays","changeCalender","action","slice","map","e","alert","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nconst dayOWeek= ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  \nconst months= ['January', 'Feburary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n\nfunction Calender(props){\n  const { day, dayNo, month, year }= props.date();\n  \n  const [sMonth, setSMonth]= useState(month+1);\n  const [sYear, setSYear]= useState(year);\n  \n  //to get empty spaces before day 1 of month\n  const getDay1ofMonth = ()=>(new Date(`${sMonth}/1/${sYear}`).getDay());\n  \n  \n  function getDaysInMonth(year, month) {\n    return (new Date(year, month, 0).getDate());\n  }\n  function createDateListForMonth(year, month){\n    const dateList= [];\n    \n    //to add empty spaces before day 1 of month to the list\n    for (var i= 0; i < getDay1ofMonth(); i++){\n      dateList.push(\"\");\n    }\n    const noOfDays= getDaysInMonth(year, month);\n    for (var i=1; i <= noOfDays; i++){\n      dateList.push(i);\n    }\n    return dateList;\n  }\n  const changeCalender= (action)=>{\n    if (action === 'add' && sMonth <= 11){\n      setSMonth(sMonth +1); return;\n    }else if (action === 'add' && sMonth === 12){\n      setSMonth(1);\n      setSYear(sYear + 1);\n      return;\n    }\n    if (action === 'sub' && sMonth >= 2){\n      setSMonth(sMonth - 1); return;\n    }else if (action === 'sub' && sMonth === 1){\n      setSMonth(12);\n      setSYear(sYear - 1);\n      return;\n    }\n  }\n  \n  return(<div className='calender'>\n    <div className='calender-header'>\n      <h4>{year}</h4>\n      <h2>{dayOWeek[day].slice(0,3)}, {months[month]} {dayNo}</h2>\n    </div>\n    <div className='calender-body'>\n      <ul>\n        <li className=\"prev\" onClick={()=>(changeCalender('sub'))}>&#10094;</li>\n        <li className=\"next\" onClick={()=>(changeCalender('add'))}>&#10095;</li>\n        <li className='mid'>{months[sMonth-1]} {sYear}</li>\n      </ul>\n      <ul className='days'>\n        {dayOWeek.map((day)=>(<li>{day.slice(0,1)}</li>))}\n      </ul>\n      <ul className='dayNo'>\n        {createDateListForMonth(sYear, sMonth).map((date)=>(<li value= {date} onClick={(e)=>(alert(`${sMonth}/${e.target.value}/${sYear}`))}>{date}</li>))}\n      </ul>\n    </div>\n  </div>)\n}\nexport default Calender;"]},"metadata":{},"sourceType":"module"}