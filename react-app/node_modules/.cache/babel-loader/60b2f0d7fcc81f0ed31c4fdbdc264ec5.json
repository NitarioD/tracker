{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/e-com50/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Home from './pages/home.jsx';\nimport Tasks from './pages/tasks.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8080/api';\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  _s();\n\n  const [date, setDate] = useState({});\n  useEffect(() => {\n    const getDate = async () => {\n      const {\n        data\n      } = await axios.get('/date');\n      setDate(data);\n    };\n\n    getDate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          setDate: setDate,\n          date: () => date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        element: /*#__PURE__*/_jsxDEV(Tasks, {\n          date: () => date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"nbTCh+d44RRjXatqVdYIwszSUbc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/e-com50/react-app/src/App.js"],"names":["axios","BrowserRouter","Router","Routes","Route","Navigate","useState","useEffect","Home","Tasks","defaults","baseURL","withCredentials","App","date","setDate","getDate","data","get"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEAT,KAAK,CAACU,QAAN,CAAeC,OAAf,GAAwB,2BAAxB;AACAX,KAAK,CAACU,QAAN,CAAeE,eAAf,GAAgC,IAAhC;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAE,MAAI;AACb,UAAMS,OAAO,GAAE,YAAU;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAU,MAAMjB,KAAK,CAACkB,GAAN,CAAU,OAAV,CAAtB;AAEAH,MAAAA,OAAO,CAACE,IAAD,CAAP;AACD,KAJC;;AAKFD,IAAAA,OAAO;AACN,GAPQ,EAON,EAPM,CAAT;AASA,sBAAQ,QAAC,MAAD;AAAA,2BACR,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,eAAG,QAAC,IAAD;AAAM,UAAA,OAAO,EAAGD,OAAhB;AACV,UAAA,IAAI,EAAG,MAAKD;AADF;AAAA;AAAA;AAAA;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,eAAG,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,MAAKA;AAAnB;AAAA;AAAA;AAAA;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,UAAR;AAaD;;GAzBQD,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport Home from './pages/home.jsx';\nimport Tasks from './pages/tasks.jsx';\n\naxios.defaults.baseURL= 'http://localhost:8080/api';\naxios.defaults.withCredentials= true;\n\nfunction App(){\n  const [date, setDate ]= useState({});\n  \n  useEffect( ()=>{\n    const getDate= async ()=>{\n    const { data }= await axios.get('/date');\n    \n    setDate(data);\n  };\n  getDate()\n  }, []);\n  \n  return (<Router>\n  <Routes>\n    <Route \n      path=\"/\"\n      element={ <Home setDate= {setDate}\n      date= {()=>(date)}/>}\n    />\n    <Route\n      path=\"/tasks\"\n      element={ <Tasks date= {()=>(date)}/>}\n    />\n  </Routes>\n  </Router>);\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}