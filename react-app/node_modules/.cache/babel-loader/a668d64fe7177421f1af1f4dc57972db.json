{"ast":null,"code":"import _asyncToGenerator from\"/data/data/com.termux/files/home/chat-app/react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/data/data/com.termux/files/home/chat-app/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/data/data/com.termux/files/home/chat-app/react-app/node_modules/@babel/runtime/regenerator/index.js\";import axios from'axios';import{useState,useEffect,useRef}from'react';import StateTag from'../components/state-tag';import send from'../images/send.svg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ConvoPage(props){var receiver=props.receiver;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),refresh=_useState4[0],setRefresh=_useState4[1];var messagesEndRef=useRef(null);var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),convoList=_useState6[0],setConvoList=_useState6[1];useEffect(function(){var getConvos=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/conversations/'+receiver);case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setConvoList(data.conversations);messagesEndRef.current.scrollIntoView({behavior:\"smooth\"});case 6:case\"end\":return _context.stop();}}},_callee);}));return function getConvos(){return _ref.apply(this,arguments);};}();getConvos();},[refresh]);useEffect(function(){var timer=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('/conversations/'+receiver);case 2:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;setConvoList(data.conversations);messagesEndRef.current.scrollIntoView({behavior:\"smooth\"});case 6:case\"end\":return _context2.stop();}}},_callee2);})),3000);return function(){return clearInterval(timer);};},[]);function handleSend(){if(message!==''){var sendConvo=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.post('/conversations/'+receiver,{message:message});case 2:_yield$axios$post=_context3.sent;data=_yield$axios$post.data;if(data==='sent'){setMessage('');setRefresh(!refresh);}case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function sendConvo(){return _ref3.apply(this,arguments);};}();sendConvo();}}return/*#__PURE__*/_jsxs(\"div\",{className:\"convo\",children:[/*#__PURE__*/_jsx(StateTag,{page:receiver,backTo:\"ChatPage\"}),convoList.map(function(eachConvo){return/*#__PURE__*/_jsx(\"div\",{className:\"chat\",children:/*#__PURE__*/_jsx(\"span\",{className:eachConvo.sender===receiver?'common-chat friend-chat':'common-chat user-chat',children:eachConvo.message})},eachConvo._id);}),/*#__PURE__*/_jsx(\"div\",{className:\"space\",ref:messagesEndRef}),/*#__PURE__*/_jsxs(\"div\",{className:\"compose\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"write message\",onChange:function onChange(e){return setMessage(e.target.value);},value:message}),/*#__PURE__*/_jsx(\"img\",{src:send,onClick:handleSend})]})]});}export default ConvoPage;","map":{"version":3,"sources":["/data/data/com.termux/files/home/chat-app/react-app/src/pages/conversation-page.jsx"],"names":["axios","useState","useEffect","useRef","StateTag","send","ConvoPage","props","receiver","message","setMessage","refresh","setRefresh","messagesEndRef","convoList","setConvoList","getConvos","get","data","conversations","current","scrollIntoView","behavior","timer","setInterval","clearInterval","handleSend","sendConvo","post","map","eachConvo","sender","_id","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useState, useEffect, useRef } from 'react';\nimport StateTag from '../components/state-tag';\nimport send from '../images/send.svg';\n\nfunction ConvoPage(props){\n  const receiver= props.receiver;\n  const [ message, setMessage ]= useState('');\n  const [ refresh, setRefresh ]= useState(false);\n  \n  const messagesEndRef = useRef(null);\n  \n  const [ convoList, setConvoList]= useState([]);\n  useEffect( ()=>{\n    const getConvos= async ()=>{\n      const { data }= await axios.get('/conversations/'+receiver);\n      setConvoList(data.conversations);\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n    getConvos();\n  }, [refresh])\n  \n  useEffect(() => {\n  const timer = setInterval( async () => {\n    const { data }= await axios.get('/conversations/'+receiver);\n      setConvoList(data.conversations);\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, 3000);\n  return () => clearInterval(timer);\n}, []);\n  \n  function handleSend(){\n    if( message !== ''){\n      const sendConvo= async ()=>{\n      const { data }= await axios.post('/conversations/'+receiver, {\n          message: message\n      });\n      if (data === 'sent'){\n        setMessage('');\n        setRefresh(!refresh);\n      }\n    }\n    sendConvo();\n    }\n    \n  }\n  \n  return(<div className=\"convo\">\n    <StateTag\n    page= {receiver}\n    backTo= \"ChatPage\" />\n    {convoList.map( (eachConvo)=>(<div className=\"chat\" key= {eachConvo._id}>\n    <span className= {(eachConvo.sender === receiver)? 'common-chat friend-chat': 'common-chat user-chat'}>{eachConvo.message}</span>\n    </div>))}\n    <div className='space' ref={messagesEndRef}></div>\n    \n    <div className=\"compose\">\n      <input placeholder=\"write message\" onChange={(e)=>(setMessage(e.target.value))} value={message}/>\n      <img src= {send} onClick= {handleSend}/>\n    </div>\n  </div>);\n}\nexport default ConvoPage;"]},"metadata":{},"sourceType":"module"}