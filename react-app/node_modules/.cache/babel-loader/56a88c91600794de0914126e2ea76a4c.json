{"ast":null,"code":"import _asyncToGenerator from\"/data/data/com.termux/files/home/chat-app/react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/data/data/com.termux/files/home/chat-app/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/data/data/com.termux/files/home/chat-app/react-app/node_modules/@babel/runtime/regenerator/index.js\";import axios from'axios';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import{useEffect,useState}from'react';import ChatPage from'./pages/chat-page.jsx';import ConvoPage from'./pages/conversation-page.jsx';import AccessPage from'./pages/access-page.jsx';import RegisterPage from'./pages/register-page.jsx';import UsersPage from'./pages/users-page.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";axios.defaults.baseURL='api';//\"https://glacial-everglades-19650.herokuapp.com/api\";\naxios.defaults.withCredentials=true;function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),validation=_useState2[0],setValidation=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),receiver=_useState4[0],setReceiver=_useState4[1];useEffect(function(){var validationChecker=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/authenticate\");case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setValidation(data.auth);case 5:case\"end\":return _context.stop();}}},_callee);}));return function validationChecker(){return _ref.apply(this,arguments);};}();validationChecker();},[]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",element:/*#__PURE__*/_jsx(AccessPage,{setValidation:setValidation})}),/*#__PURE__*/_jsx(Route,{path:\"/home\",element:validation===true?/*#__PURE__*/_jsx(ChatPage,{setReceiver:setReceiver}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(RegisterPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/users\",element:/*#__PURE__*/_jsx(UsersPage,{setReceiver:setReceiver})}),/*#__PURE__*/_jsx(Route,{path:\"/conversations\",element:/*#__PURE__*/_jsx(ConvoPage,{receiver:receiver})})]})});}export default App;","map":{"version":3,"sources":["/data/data/com.termux/files/home/chat-app/react-app/src/App.js"],"names":["axios","BrowserRouter","Router","Routes","Route","Navigate","useEffect","useState","ChatPage","ConvoPage","AccessPage","RegisterPage","UsersPage","defaults","baseURL","withCredentials","App","validation","setValidation","receiver","setReceiver","validationChecker","get","data","auth"],"mappings":"8ZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,CAAiDC,QAAjD,KAAiE,kBAAjE,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,C,wFAEAZ,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAwB,KAAxB,CAA8B;AAC9Bd,KAAK,CAACa,QAAN,CAAeE,eAAf,CAAgC,IAAhC,CAEA,QAASC,CAAAA,GAAT,EAAc,CACZ,cAAqCT,QAAQ,CAAC,EAAD,CAA7C,wCAAQU,UAAR,eAAoBC,aAApB,eACA,eAA+BX,QAAQ,CAAC,EAAD,CAAvC,yCAAOY,QAAP,eAAiBC,WAAjB,eAEAd,SAAS,CAAE,UAAI,CACb,GAAMe,CAAAA,iBAAiB,0FAAG,mLACDrB,CAAAA,KAAK,CAACsB,GAAN,CAAU,eAAV,CADC,uCAChBC,IADgB,kBAChBA,IADgB,CAExBL,aAAa,CAACK,IAAI,CAACC,IAAN,CAAb,CAFwB,sDAAH,kBAAjBH,CAAAA,iBAAiB,0CAAvB,CAIAA,iBAAiB,GAElB,CAPQ,CAON,EAPM,CAAT,CASA,mBAAQ,KAAC,MAAD,wBACR,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,OAAO,cAAE,KAAC,UAAD,EAAY,aAAa,CAAGH,aAA5B,EAApC,EADF,cAEE,KAAC,KAAD,EACG,IAAI,CAAC,OADR,CAEE,OAAO,CAAID,UAAU,GAAK,IAAhB,cAAwB,KAAC,QAAD,EAAU,WAAW,CAAGG,WAAxB,EAAxB,cAAiE,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAF7E,EAFF,cAME,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,OAAO,cAAE,KAAC,YAAD,IAAjC,EANF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,OAAO,cAAE,KAAC,SAAD,EAAW,WAAW,CAAGA,WAAzB,EAA9B,EAPF,cAQE,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,OAAO,cAAE,KAAC,SAAD,EAAW,QAAQ,CAAGD,QAAtB,EAAtC,EARF,GADQ,EAAR,CAYD,CACD,cAAeH,CAAAA,GAAf","sourcesContent":["import axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport ChatPage from './pages/chat-page.jsx';\nimport ConvoPage from './pages/conversation-page.jsx';\nimport AccessPage from './pages/access-page.jsx';\nimport RegisterPage from './pages/register-page.jsx';\nimport UsersPage from './pages/users-page.jsx';\n\naxios.defaults.baseURL= 'api' //\"https://glacial-everglades-19650.herokuapp.com/api\";\naxios.defaults.withCredentials= true;\n\nfunction App(){\n  const [ validation, setValidation ]= useState(\"\");\n  const [receiver, setReceiver]= useState('');\n  \n  useEffect( ()=>{\n    const validationChecker = async ()=>{\n      const { data } = await axios.get(\"/authenticate\");\n      setValidation(data.auth);\n    }\n    validationChecker();\n    \n  }, []);\n  \n  return (<Router>\n  <Routes>\n    <Route exact path=\"/login\" element={<AccessPage setValidation= {setValidation}/>} />\n    <Route \n       path=\"/home\"\n      element={ (validation === true)?  <ChatPage setReceiver= {setReceiver} />: <Navigate to='/login' />}\n    />\n    <Route path=\"/register\" element={<RegisterPage />} />\n    <Route path=\"/users\" element={<UsersPage setReceiver= {setReceiver}/>} />\n    <Route path=\"/conversations\" element={<ConvoPage receiver= {receiver}/>} />\n  </Routes>\n  </Router>);\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}